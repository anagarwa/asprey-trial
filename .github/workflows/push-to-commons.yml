name: Push commons changes and Create PR in Commons Repo

permissions:
  contents: write  # Allows push permissions for the GITHUB_TOKEN

on:
  pull_request:
    types: [closed]
    branches:
      - dev  # Trigger only when PRs are merged into the 'dev' branch

jobs:
  push_commons_changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the arena repository
      - name: Checkout the arena repository
        uses: actions/checkout@v2
        with:
          ref: "dev"
          fetch-depth: 0  # Fetch full history for subtree

      # Step 2: Check for changes in the commons folder
      - name: Check for changes in the commons folder
        run: |
          commons_changes=$(git diff --name-only HEAD^ HEAD | grep '^commons/' || true)

          if [ -z "$commons_changes" ]; then
            echo "No changes in the commons folder. Skipping push and PR to commons repo."
            exit 0
          else
            echo "Changes found in commons folder. Proceeding to push to commons repo."
          fi

      # Step 3: Set up Git identity to match PR author
      - name: Set up Git identity to match PR author
        run: |
          PR_AUTHOR_NAME=$(jq -r '.pull_request.user.login' "$GITHUB_EVENT_PATH")
          PR_AUTHOR_EMAIL="$PR_AUTHOR_NAME@users.noreply.github.com"
          git config user.name "$PR_AUTHOR_NAME"
          git config user.email "$PR_AUTHOR_EMAIL"

      # Step 4: Set up SSH key for Git
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 5: Push changes to the commons repository using subtree via SSH
      - name: Push changes to the commons repository subtree
        run: |
          COMMONS_REPO_URL="git@github.com:anagarwa/first-helix-website.git"
          FEATURE_BRANCH="${{ github.event.pull_request.head.ref }}"  # Use the PR branch name
          TARGET_BRANCH="automated-arena-push-${FEATURE_BRANCH}"

          # Push the changes in the commons folder to the commons repository using SSH
          git remote add commons $COMMONS_REPO_URL
          git subtree push --prefix=commons commons $TARGET_BRANCH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
